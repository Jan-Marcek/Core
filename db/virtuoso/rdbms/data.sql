fk_check_input_values(0);
-- dbdump: dumping datasource "localhost:1111", username=dba
-- tablequalifier=NULL  tableowner=NULL  tablename=is given, one or more  tabletype=NULL
-- Connected to datasource "OpenLink Virtuoso", Driver v. 06.01.3127 OpenLink Virtuoso ODBC Driver.
-- get_all_tables: tablepattern="db.intlib.%",11
-- Definitions of 19 tables were read in.
-- SELECT * FROM DB.INTLIB.DATAUNIT_INFO
-- Table DB.INTLIB.DATAUNIT_INFO 0 rows output.
-- SELECT * FROM DB.INTLIB.DPU_INSTANCE
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_INSTANCE(id,name,description,type,jar_path,configuration,dpu_id) VALUES(1,'SPARQL Extractor','Extracts RDF data.',0,'RDF_extractor-0.0.1.jar',?,1);
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E657874726163746F722E7264662E5244464578747261
63746F72436F6E6669673E0A202020203C53504152514C5F5F656E64706F696E
743E687474703A2F2F646270656469612E6F72672F73706172716C3C2F535041
52514C5F5F656E64706F696E743E0A202020203C486F73745F5F6E616D653E3C
2F486F73745F5F6E616D653E0A202020203C50617373776F72643E3C2F506173
73776F72643E0A202020203C47726170687355726920636C6173733D226C696E
6B65642D6C697374223E0A2020202020203C737472696E673E687474703A2F2F
646270656469612E6F72672C2F3C2F737472696E673E0A202020203C2F477261
7068735572693E0A202020203C53504152514C5F5F71756572793E434F4E5354
52554354207B266C743B687474703A2F2F646270656469612E6F72672F726573
6F757263652F5072616775652667743B203F70203F6F7D207768657265207B26
6C743B687474703A2F2F646270656469612E6F72672F7265736F757263652F50
72616775652667743B203F70203F6F207D204C494D4954203130303C2F535041
52514C5F5F71756572793E0A202020203C457874726163744661696C3E66616C
73653C2F457874726163744661696C3E0A20203C2F637A2E63756E692E6D6666
2E7872672E696E746C69622E657874726163746F722E7264662E524446457874
726163746F72436F6E6669673E0A3C2F6F626A6563742D73747265616D3E
END
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_INSTANCE(id,name,description,type,jar_path,configuration,dpu_id) VALUES(2,'RDF File Loader','Loads RDF data into file.',2,'File_loader-0.0.1.jar',?,5);
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E6C6F616465722E66696C652E46696C654C6F61646572
436F6E6669673E0A202020203C4469726563746F7279506174683E2F746D702F
3C2F4469726563746F7279506174683E0A202020203C46696C654E616D653E64
6270656469612E7264663C2F46696C654E616D653E0A202020203C5244464669
6C65466F726D61743E4155544F3C2F52444646696C65466F726D61743E0A2020
20203C446966664E616D653E66616C73653C2F446966664E616D653E0A20203C
2F637A2E63756E692E6D66662E7872672E696E746C69622E6C6F616465722E66
696C652E46696C654C6F61646572436F6E6669673E0A3C2F6F626A6563742D73
747265616D3E
END
-- Table DB.INTLIB.DPU_INSTANCE 2 rows output.
-- SELECT * FROM DB.INTLIB.DPU_TEMPLATE
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_TEMPLATE(id,name,description,type,jar_path,configuration,visibility,jar_description) VALUES(1,'SPARQL Extractor','Extracts RDF data.',0,'RDF_extractor-0.0.1.jar',?,1,'No description in manifest.');
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E6C6F616465722E66696C652E46696C654C6F61646572
436F6E6669673E0A202020203C4469726563746F7279506174683E2F746D702F
3C2F4469726563746F7279506174683E0A202020203C46696C654E616D653E64
6270656469612E7264663C2F46696C654E616D653E0A202020203C5244464669
6C65466F726D61743E4155544F3C2F52444646696C65466F726D61743E0A2020
20203C446966664E616D653E66616C73653C2F446966664E616D653E0A20203C
2F637A2E63756E692E6D66662E7872672E696E746C69622E6C6F616465722E66
696C652E46696C654C6F61646572436F6E6669673E0A3C2F6F626A6563742D73
747265616D3E
END
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_TEMPLATE(id,name,description,type,jar_path,configuration,visibility,jar_description) VALUES(2,'RDF File Extractor','Extracts RDF data from a file.',0,'File_extractor-0.0.1.jar',?,1,'No description in manifest.');
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E6C6F616465722E66696C652E46696C654C6F61646572
436F6E6669673E0A202020203C4469726563746F7279506174683E2F746D702F
3C2F4469726563746F7279506174683E0A202020203C46696C654E616D653E64
6270656469612E7264663C2F46696C654E616D653E0A202020203C5244464669
6C65466F726D61743E4155544F3C2F52444646696C65466F726D61743E0A2020
20203C446966664E616D653E66616C73653C2F446966664E616D653E0A20203C
2F637A2E63756E692E6D66662E7872672E696E746C69622E6C6F616465722E66
696C652E46696C654C6F61646572436F6E6669673E0A3C2F6F626A6563742D73
747265616D3E
END
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_TEMPLATE(id,name,description,type,jar_path,configuration,visibility,jar_description) VALUES(3,'SPARQL Transformer','SPARQL Transformer.',1,'SPARQL_transformer-0.0.1.jar',?,1,'No description in manifest.');
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E6C6F616465722E66696C652E46696C654C6F61646572
436F6E6669673E0A202020203C4469726563746F7279506174683E2F746D702F
3C2F4469726563746F7279506174683E0A202020203C46696C654E616D653E64
6270656469612E7264663C2F46696C654E616D653E0A202020203C5244464669
6C65466F726D61743E4155544F3C2F52444646696C65466F726D61743E0A2020
20203C446966664E616D653E66616C73653C2F446966664E616D653E0A20203C
2F637A2E63756E692E6D66662E7872672E696E746C69622E6C6F616465722E66
696C652E46696C654C6F61646572436F6E6669673E0A3C2F6F626A6563742D73
747265616D3E
END
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_TEMPLATE(id,name,description,type,jar_path,configuration,visibility,jar_description) VALUES(4,'SPARQL Loader','Loads RDF data.',2,'RDF_loader-0.0.1.jar',?,1,'No description in manifest.');
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E6C6F616465722E66696C652E46696C654C6F61646572
436F6E6669673E0A202020203C4469726563746F7279506174683E2F746D702F
3C2F4469726563746F7279506174683E0A202020203C46696C654E616D653E64
6270656469612E7264663C2F46696C654E616D653E0A202020203C5244464669
6C65466F726D61743E4155544F3C2F52444646696C65466F726D61743E0A2020
20203C446966664E616D653E66616C73653C2F446966664E616D653E0A20203C
2F637A2E63756E692E6D66662E7872672E696E746C69622E6C6F616465722E66
696C652E46696C654C6F61646572436F6E6669673E0A3C2F6F626A6563742D73
747265616D3E
END
FOREACH HEXADECIMAL BLOB INSERT INTO DB.INTLIB.DPU_TEMPLATE(id,name,description,type,jar_path,configuration,visibility,jar_description) VALUES(5,'RDF File Loader','Loads RDF data into file.',2,'File_loader-0.0.1.jar',?,1,'No description in manifest.');
3C6F626A6563742D73747265616D3E0A20203C637A2E63756E692E6D66662E78
72672E696E746C69622E6C6F616465722E66696C652E46696C654C6F61646572
436F6E6669673E0A202020203C4469726563746F7279506174683E2F746D702F
3C2F4469726563746F7279506174683E0A202020203C46696C654E616D653E64
6270656469612E7264663C2F46696C654E616D653E0A202020203C5244464669
6C65466F726D61743E4155544F3C2F52444646696C65466F726D61743E0A2020
20203C446966664E616D653E66616C73653C2F446966664E616D653E0A20203C
2F637A2E63756E692E6D66662E7872672E696E746C69622E6C6F616465722E66
696C652E46696C654C6F61646572436F6E6669673E0A3C2F6F626A6563742D73
747265616D3E
END
-- Table DB.INTLIB.DPU_TEMPLATE 5 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_CONTEXT_DPU
-- Table DB.INTLIB.EXEC_CONTEXT_DPU 0 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_CONTEXT_PIPELINE
-- Table DB.INTLIB.EXEC_CONTEXT_PIPELINE 0 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_CONTEXT_PROCCONTEXT
-- Table DB.INTLIB.EXEC_CONTEXT_PROCCONTEXT 0 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_DATAUNIT_INFO
-- Table DB.INTLIB.EXEC_DATAUNIT_INFO 0 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_PIPELINE
-- Table DB.INTLIB.EXEC_PIPELINE 0 rows output.
-- Table DB.INTLIB.EXEC_RECORD has more than one blob column.
-- The column full_message of type LONG VARCHAR might not get properly inserted.
-- SELECT * FROM DB.INTLIB.EXEC_RECORD
-- Table DB.INTLIB.EXEC_RECORD has more than one blob column.
-- The column full_message of type LONG VARCHAR might not get properly inserted.
-- Table DB.INTLIB.EXEC_RECORD 0 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_SCHEDULE
-- Table DB.INTLIB.EXEC_SCHEDULE 0 rows output.
-- SELECT * FROM DB.INTLIB.EXEC_SCHEDULE_AFTER
-- Table DB.INTLIB.EXEC_SCHEDULE_AFTER 0 rows output.
-- SELECT * FROM DB.INTLIB.LOGGING_EVENT
-- Table DB.INTLIB.LOGGING_EVENT 0 rows output.
-- SELECT * FROM DB.INTLIB.LOGGING_EVENT_EXCEPTION
-- Table DB.INTLIB.LOGGING_EVENT_EXCEPTION 0 rows output.
-- SELECT * FROM DB.INTLIB.LOGGING_EVENT_PROPERTY
-- Table DB.INTLIB.LOGGING_EVENT_PROPERTY 0 rows output.
-- SELECT * FROM DB.INTLIB.PPL_EDGE
INSERT INTO DB.INTLIB.PPL_EDGE(id,graph_id,node_from_id,node_to_id) VALUES(1,1,1,2);
-- Table DB.INTLIB.PPL_EDGE 1 rows output.
-- SELECT * FROM DB.INTLIB.PPL_GRAPH
INSERT INTO DB.INTLIB.PPL_GRAPH(id,pipeline_id) VALUES(1,1);
-- Table DB.INTLIB.PPL_GRAPH 1 rows output.
-- SELECT * FROM DB.INTLIB.PPL_MODEL
INSERT INTO DB.INTLIB.PPL_MODEL(id,name,description) VALUES(1,'DBpedia','Loads 100 triples from DBpedia.');
-- Table DB.INTLIB.PPL_MODEL 1 rows output.
-- SELECT * FROM DB.INTLIB.PPL_NODE
INSERT INTO DB.INTLIB.PPL_NODE(id,graph_id,instance_id,position_id) VALUES(1,1,1,1);
INSERT INTO DB.INTLIB.PPL_NODE(id,graph_id,instance_id,position_id) VALUES(2,1,2,2);
-- Table DB.INTLIB.PPL_NODE 2 rows output.
-- SELECT * FROM DB.INTLIB.PPL_POSITION
INSERT INTO DB.INTLIB.PPL_POSITION(id,pos_x,pos_y) VALUES(1,138,52);
INSERT INTO DB.INTLIB.PPL_POSITION(id,pos_x,pos_y) VALUES(2,487,132);
-- Table DB.INTLIB.PPL_POSITION 2 rows output.


fk_check_input_values(1);
