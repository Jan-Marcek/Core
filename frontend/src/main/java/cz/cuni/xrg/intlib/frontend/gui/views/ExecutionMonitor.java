package cz.cuni.xrg.intlib.frontend.gui.views;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class ExecutionMonitor extends CustomComponent implements View, ClickListener {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Label label;

	static String[] visibleCols = new String[] { "date", "name", "user", "status" ,"obsolete", "actions", "report" };
	static String[] headers = new String[] { "Date", "Name", "User", "Status" ,"Obsolete", "Actions", "Report" };
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ExecutionMonitor() {

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(true);
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setStyleName("mainLayout");
		
		// top-level component properties
		//setSizeUndefined();
		setWidth("100%");
		setHeight("100%");
		
		// label
		label = new Label();
		label.setImmediate(false);
		label.setWidth("-1px");
		label.setHeight("-1px");
		label.setValue("<h1>ExecutionMonitor</h>");
		label.setContentMode(ContentMode.HTML);
		mainLayout.addComponent(label);
		
		IndexedContainer tableData = getTableData();
		Table monitorTable = new Table("");
        monitorTable.setContainerDataSource(tableData);
        monitorTable.setWidth("100%");
        monitorTable.setHeight("100%");
        monitorTable.setVisibleColumns(visibleCols); //Set visible columns
        monitorTable.setColumnHeaders(headers);
        monitorTable.setPageLength(10);
             
        monitorTable.addGeneratedColumn("actions", new GenerateActionColumnMonitor(this));
        
        mainLayout.addComponent(monitorTable);
       // mainLayout.addComponent(monitorTable.createControls());
				
		
		return mainLayout;
	}
	
	public static IndexedContainer getTableData() {

		String[] date = { "2012.02.12", "2012.02.13", "2012.12.12","2013.05.13","2013.01.18","2012.03.01","2012.04.30" };
		String[] name = { "Ext", "Alf", "Ext", "Pipe1", "Ted", "Ted", "Ted" };
		String[] user = { "knapt", "knapt", "tomesj", "kukharm", "skpdap", "kukharm", "skpdap" };
		String[] status = { "progress", "error", "ok", "error", "ok","ok","ok" };


		
		IndexedContainer result = new IndexedContainer();

		for (String p : visibleCols) {
			result.addContainerProperty(p, String.class, "");
		}

		int  max = getMinLength(date, name, user,status);

		for (int i = 0; i < max; i++) {
			Object num = result.addItem();
			result.getContainerProperty(num, "date").setValue(date[i]);
			result.getContainerProperty(num, "user").setValue(user[i]);
			result.getContainerProperty(num, "name").setValue(name[i]);
			result.getContainerProperty(num, "status").setValue(status[i]);

		}

		return result;
	}
	
	private final static int UNDEFINED_LENGTH = -1;

	public static int getMinLength(String[]... arraysLength) {
		int min = UNDEFINED_LENGTH;
		for (int i = 0; i < arraysLength.length; i++) {
			if (min == UNDEFINED_LENGTH) {
				min = arraysLength[i].length;
			} else {
				min = Math.min(min, arraysLength[i].length);
			}
		}
		return min;

	}

	@Override
	public void enter(ViewChangeEvent event) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		
	}

}
