<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <import resource="classpath:commons-app-context.xml" />
	
    <!-- Scan Views for bean definitions. -->
    <context:component-scan base-package="cz.cuni.mff.xrg.odcs.frontend.gui.views"/>

    <!-- Application configuration is taken from war file, so we override it. -->
    <bean id="configuration" class="cz.cuni.mff.xrg.odcs.commons.app.conf.AppConfig" factory-method="loadFrom">
        <constructor-arg value="/WEB-INF/config.properties" />
    </bean>
	
    <!-- Module configuration needs to be defined here,
    because it differs from backend -->
    <bean id="moduleFacadeConfiguration" parent="abstractModuleFacadeConfig">
        <constructor-arg value="FRONTEND" />
    </bean>
	
    <!-- bean for notification -->
    <bean class="cz.cuni.mff.xrg.odcs.commons.app.module.impl.FileNotifierClient" />
	
    <!-- watcher for DPU changes -->
    <bean class="cz.cuni.mff.xrg.odcs.commons.app.module.osgi.OSGIChangeManager" >
        <constructor-arg name="refreshDatabase" value="true"/>
    </bean>
	
    <!-- bean that provide functionality for manipulating with DPUs -->
    <bean class="cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator" />
		
    <!-- Factory for constructing data containers for Vaadin tables. -->

    <bean id="pipelineListPresenterImpl" class="cz.cuni.mff.xrg.odcs.frontend.gui.views.pipelinelist.PipelineListPresenterImpl" scope="prototype" />
	
    <bean id="pipelineListViewImpl" class="cz.cuni.mff.xrg.odcs.frontend.gui.views.pipelinelist.PipelineListViewImpl" scope="prototype" />

    <!-- accessors -->
    <bean id="pipelineAccessor" class="cz.cuni.mff.xrg.odcs.frontend.container.accessor.PipelineAccessor" />
    <bean id="executionAccessor" class="cz.cuni.mff.xrg.odcs.frontend.container.accessor.ExecutionAccessor" />
    <bean id="logAccessor" class="cz.cuni.mff.xrg.odcs.frontend.container.accessor.LogAccessor" />
    <bean id="messageRecordAccessor" class="cz.cuni.mff.xrg.odcs.frontend.container.accessor.MessageRecordAccessor" />
	
    <bean id="logMessagesTable" class="cz.cuni.mff.xrg.odcs.frontend.gui.tables.LogMessagesTable" scope="prototype" />
    <bean id="debugView" class="cz.cuni.mff.xrg.odcs.frontend.gui.components.DebuggingView" scope="prototype" />

    <bean id="logTable" class="cz.cuni.mff.xrg.odcs.frontend.gui.tables.LogTable" scope="prototype" />
        
    <!-- Imposes authorization filters on container. -->
    <bean id="containerAuthorizator" class="cz.cuni.mff.xrg.odcs.frontend.container.exp.ContainerAuthorizatorImpl" />
	
    <!-- tranlator for vaadin's filters -->
    <bean id="vaadinFilterTranslator" class="cz.cuni.mff.xrg.odcs.frontend.container.VaadinFilterTranslator" />
    
    <bean id="menuLayout" class="cz.cuni.mff.xrg.odcs.frontend.gui.MenuLayout" scope="prototype" />
    
    <!-- sessions scope -->   
    
    <bean id="ui" class="cz.cuni.mff.xrg.odcs.frontend.AppEntry" scope="prototype" />

    <!-- provide access to the navigator, the navigagtor must be set into holder vefore it's first use -->
    <bean id="navigatorHolder" class="cz.cuni.mff.xrg.odcs.frontend.navigation.ClassNavigatorHolder" scope="prototype"/>
	
    <bean id="dpuTree" class="cz.cuni.mff.xrg.odcs.frontend.gui.components.DPUTree" scope="prototype" />
    <bean id="schedulePipeline" class="cz.cuni.mff.xrg.odcs.frontend.gui.components.SchedulePipeline" scope="prototype" />
    
</beans>
