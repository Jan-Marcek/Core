<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cz.cuni.xrg.intlib</groupId> 
		<artifactId>intlib</artifactId> 
		<version>0.0.1</version> 
	</parent>	
	<artifactId>commons-app</artifactId>
	<name>commons-app</name>
	<description></description>

	<!-- Shared version number properties -->
	<properties>
		<org.springframework.version>3.1.2.RELEASE</org.springframework.version>
		<logback.version>1.0.13</logback.version>
	</properties>

	<repositories>
		<repository> <!-- hibernate -->
	        <id>JBoss</id>
	        <name>JBoss Repsitory</name>
	        <layout>default</layout>
	        <url>http://repository.jboss.org/maven2</url>
	    </repository>

		<repository>
			<id>maven-eclipse</id> <!-- repository for org.eclipse.tycho -->
			<url>http://maven.eclipse.org/nexus/content/repositories/testing</url>
		</repository>

		<repository> <!-- Virtuoso JDBC -->
	        <id>intlib-thirdparty</id>
	        <url>http://gd.projekty.ms.mff.cuni.cz:9123/nexus/content/repositories/thirdparty</url>
	    </repository>

		<repository> <!-- spring repository -->
            <id>com.springsource.repository.bundles.release</id>
            <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
            <url>http://repository.springsource.com/maven/bundles/release</url>
        </repository>
	</repositories>
	 
	<dependencies>
        <dependency> <!--  JUnit dependency -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>	
	
		<dependency> <!-- commons project -->
			<groupId>${project.groupId}</groupId>
			<artifactId>commons</artifactId>
			<!-- the version has to be specify -->
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<dependency> <!-- logback as implementation org.slf4j -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
	
		<dependency> <!-- xml object de-serialization -->
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.4</version>
		</dependency>
		            	
	
		<dependency> <!-- OSGI impelemention -->  
			<groupId>org.eclipse.tycho</groupId>
			<artifactId>org.eclipse.osgi</artifactId>
			<version>3.9.0.v20130305-2200</version>
		</dependency>
	    	    
        <dependency> <!-- apache.commons : delete folder recursive -->
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <type>jar</type>
        </dependency>	    
	    

		<!-- SPRING DEPENDENCIES -->

		<!--
			Core utilities used by other modules.
			Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-core</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>	    
	    
		<!--
			Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
			This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
			Bean Factory and JavaBeans utilities (depends on spring-core)
			Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-beans</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
			Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
			Define this if you use Spring Transactions or DAO Exception Hierarchy
			(org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-tx</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
			Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
			(depends on spring-core, spring-beans, spring-context, spring-tx)
			Define this if you need ORM (org.springframework.orm.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-orm</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>

		<!--
			Support for testing Spring applications with tools such as JUnit and TestNG
			This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-test</artifactId>
		  <version>${org.springframework.version}</version>
		  <scope>test</scope>
		</dependency>

		<!-- CGLIB is required for proxying classes -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.0</version>
		</dependency>

		<!-- ASM depends on ASM-UTIL, CGLIB depends on ASN, however ASM is
			 loaded by maven automatically while ASM-UTIL is not... -->
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-util</artifactId>
			<version>4.0</version>
		</dependency>

		<!-- END OF SPRING DEPENDENCIES -->
	    
        <dependency> <!-- Virtuoso dependency -->
            <groupId>com.openlinksw</groupId>
            <artifactId>virt_sesame2</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>com.openlinksw</groupId>
            <artifactId>virtjdbc</artifactId>
            <version>3</version>
        </dependency>

		<!-- Embedded database used for testing -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.171</version>
		</dependency>	    
	    
	    <!-- Hibernate dependencies -->
        <dependency>
            <groupId>org.hibernate.common</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>4.0.1.Final</version>
            <classifier>tests</classifier>
        </dependency>
		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.0.1.Final</version>
        </dependency>
 		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.0.1.Final</version>
        </dependency>
      	<dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
        </dependency>
		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.2.0.Final</version>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>virtuoso</groupId>
			<artifactId>jdbc-driver</artifactId>
			<version>4</version>
		</dependency>
		
	</dependencies>

	<build>	
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
        </plugins>
	</build>
  
</project>