<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:context="http://www.springframework.org/schema/context">

	<import resource="classpath:commons-app-context.xml" />

	<!-- Module configuration needs to be defined here, because it differs from 
		frontend -->
	<bean id="moduleFacadeConfiguration" parent="abstractModuleFacadeConfig">
		<constructor-arg value="BACKEND" />
	</bean>

	<!-- TCP/IP server, used to recieve request from frontend -->
	<bean id="server" class="cz.cuni.xrg.intlib.backend.communication.Server" />

	<!-- engine itself, take care about executing of PipelineExecution -->
	<bean id="engine" class="cz.cuni.xrg.intlib.backend.execution.Engine" />

	<!-- prototype for pipeline worker bean -->
	<bean id="pipelineWorker" class="cz.cuni.xrg.intlib.backend.execution.PipelineWorker"
		scope="prototype" lazy-init="true" />
	
	<!-- prototypes for contexts -->
	<bean id="dpuContext" class="cz.cuni.xrg.intlib.backend.context.Context"
	    scope="prototype" lazy-init="true" />

	 <!-- access to database on one place -->
	<bean id="dbAccess" class="cz.cuni.xrg.intlib.backend.DatabaseAccess" />

	<!-- data unit factory class -->
	<bean id="dataUnitFactory" class="cz.cuni.xrg.intlib.backend.data.DataUnitFactory" />

	<!-- store events into database -->
	<bean class="cz.cuni.xrg.intlib.backend.EventListenerDatabase">
		<constructor-arg ref="dbAccess" />
	</bean>

	<!-- periodically send message to event to check DB for new tasks -->
	<bean id="heartbeat" class="cz.cuni.xrg.intlib.backend.Heartbeat" />

	<!-- scheduler -->
	<bean id="scheduler" class="cz.cuni.xrg.intlib.backend.scheduling.Scheduler" />

</beans>