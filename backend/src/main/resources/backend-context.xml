<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<import resource="classpath:commons-app-context.xml" />

	<!-- we use annotations to run tasks -->
	<task:annotation-driven executor="taskExecutor" scheduler="taskScheduler" />
	<task:executor id="taskExecutor" pool-size="4" />
	<task:scheduler id="taskScheduler" pool-size="64" />
	
	<!-- module configuration needs to be defined here, because it differs from 
		frontend -->
	<bean id="moduleFacadeConfiguration" parent="abstractModuleFacadeConfig">
		<constructor-arg value="BACKEND" />
	</bean>

	<!-- TCP/IP server, used to recieve request from frontend -->
	<bean id="server" class="cz.cuni.mff.xrg.odcs.backend.communication.Server" />

	<!-- engine itself, take care about executing of PipelineExecution -->
	<bean id="engine" class="cz.cuni.mff.xrg.odcs.backend.execution.Engine" />

	<!-- prototypes for contexts -->
	<bean id="dpuContext" class="cz.cuni.mff.xrg.odcs.backend.context.Context"
		scope="prototype" lazy-init="true" />

	<!-- pipeline executor -->
	<bean id="pipelineExecutor"
		class="cz.cuni.mff.xrg.odcs.backend.execution.pipeline.Executor"
		scope="prototype" lazy-init="true" />

	<!-- DPU executor -->
	<bean id="dpuExecutor" class="cz.cuni.mff.xrg.odcs.backend.execution.dpu.Executor"
		scope="prototype" lazy-init="true" />

	<!-- data unit factory class -->
	<bean id="dataUnitFactory" class="cz.cuni.mff.xrg.odcs.backend.data.DataUnitFactory" />

	<!-- store events into database -->
	<bean class="cz.cuni.mff.xrg.odcs.backend.EventListenerDatabase" />

	<!-- scheduler -->
	<bean id="scheduler" class="cz.cuni.mff.xrg.odcs.backend.scheduling.Scheduler" />

	<!-- replace facades from commons -->
	<bean id="pipelineFacade" class="cz.cuni.mff.xrg.odcs.backend.facade.PipelineFacade" />
	<bean id="userFacade" class="cz.cuni.mff.xrg.odcs.backend.facade.UserFacade" />
	<bean id="scheduleFacade" class="cz.cuni.mff.xrg.odcs.backend.facade.ScheduleFacade" />
	<bean id="prefixFacade"
		class="cz.cuni.mff.xrg.odcs.backend.facade.NamespacePrefixFacade" />
	<bean id="dpuFacade" class="cz.cuni.mff.xrg.odcs.backend.facade.DPUFacade" />
	<bean id="logFacade" class="cz.cuni.mff.xrg.odcs.backend.facade.LogFacade" />

	<!-- component for sending email based on events -->
	<bean id="emailCommunicator"
		class="cz.cuni.mff.xrg.odcs.backend.communication.EmailCommunicator" />

	<!-- watcher for DPU changes -->
	<bean class="cz.cuni.mff.xrg.odcs.commons.app.module.osgi.OSGIChangeManager">
		<constructor-arg name="refreshDatabase" value="false" />
	</bean>

	<!-- error handler for DB outages -->
	<bean class="cz.cuni.mff.xrg.odcs.backend.facade.NotifyWaitErrorHandler" />

	<!-- autodiscovery for DPU's pre/post executors -->
	<context:component-scan
		base-package="cz.cuni.mff.xrg.odcs.backend.execution.dpu.impl" />
	<!-- autodiscovery for pipeline's pre/post executors -->
	<context:component-scan
		base-package="cz.cuni.mff.xrg.odcs.backend.execution.pipeline.impl" />

</beans>